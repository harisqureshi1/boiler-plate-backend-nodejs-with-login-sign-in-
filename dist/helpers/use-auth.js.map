{"version":3,"file":"use-auth.js","sourceRoot":"","sources":["../../src/helpers/use-auth.ts"],"names":[],"mappings":";;;AACA,qCAAqC;AACrC,4CAA2E;AAEpE,MAAM,OAAO,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACzE,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,KAAU,EAAE,IAAS,EAAE,EAAE;QACzE,IAAI;YACF,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,8BAAkB,CAAC,aAAa,CAAC,CAAC;YAExD,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;gBAC1C,OAAO,GAAG,CAAC,MAAM,CAAC,mCAAuB,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC;oBAC3D,MAAM,EAAE,OAAO;oBACf,IAAI,EAAE,mCAAuB,CAAC,YAAY;oBAC1C,OAAO,EAAE,gBAAgB;iBAC1B,CAAC,CAAC;aACJ;YAED,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;YAChB,IAAI,EAAE,CAAC;SACR;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,GAAG,CAAC,MAAM,CAAC,mCAAuB,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;gBAC1D,MAAM,EAAE,OAAO;gBACf,IAAI,EAAE,mCAAuB,CAAC,WAAW;gBACzC,OAAO,EAAE,2CAA2C;aACrD,CAAC,CAAC;SACJ;IACH,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AACrB,CAAC,CAAC;AAvBW,QAAA,OAAO,WAuBlB","sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport * as passport from 'passport';\nimport { RequestHeadersEnum, ResponseStatusCodesEnum } from '../constants';\n\nexport const useAuth = (req: Request, res: Response, next: NextFunction) => {\n  passport.authenticate('jwt', { session: false }, (error: any, user: any) => {\n    try {\n      const token = req.get(RequestHeadersEnum.AUTHORIZATION);\n\n      if (error || !user || token !== user.token) {\n        return res.status(ResponseStatusCodesEnum.UNAUTHORIZED).json({\n          status: 'error',\n          code: ResponseStatusCodesEnum.UNAUTHORIZED,\n          message: 'Not authorized'\n        });\n      }\n\n      req.user = user;\n      next();\n    } catch (error) {\n      return res.status(ResponseStatusCodesEnum.BAD_REQUEST).json({\n        status: 'error',\n        code: ResponseStatusCodesEnum.BAD_REQUEST,\n        message: 'Invalid request body / Token not provided'\n      });\n    }\n  })(req, res, next);\n};\n"]}