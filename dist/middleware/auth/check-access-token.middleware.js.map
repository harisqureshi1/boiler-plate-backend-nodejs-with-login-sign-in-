{"version":3,"file":"check-access-token.middleware.js","sourceRoot":"","sources":["../../../src/middleware/auth/check-access-token.middleware.ts"],"names":[],"mappings":";;;AACA,+CAA0F;AAC1F,yCAA0D;AAC1D,6CAA6C;AAC7C,2CAAkD;AAE3C,MAAM,0BAA0B,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAiB,EAAE;IAEjH,IAAI;QACF,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,8BAAkB,CAAC,aAAa,CAAC,CAAC;QAExD,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC,IAAI,qBAAY,CAAC,mCAAuB,CAAC,WAAW,EAAE,qBAAY,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC;SAC/G;QAED,MAAM,IAAA,2BAAiB,EAAC,sBAAU,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAErD,MAAM,WAAW,GAAG,MAAM,sBAAW,CAAC,eAAe,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;QAE9E,IAAI,CAAC,WAAW,EAAE;YAChB,OAAO,IAAI,CAAC,IAAI,qBAAY,CAAC,mCAAuB,CAAC,SAAS,EAAE,qBAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;SAClG;QAED,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC;QAEvB,IAAI,EAAE,CAAC;KACR;IAAC,OAAO,CAAC,EAAE;QACV,IAAI,CAAC,CAAC,CAAC,CAAC;KACT;AACH,CAAC,CAAC;AAvBW,QAAA,0BAA0B,8BAuBrC","sourcesContent":["import { NextFunction, Request, Response } from 'express';\r\nimport { ActionEnum, RequestHeadersEnum, ResponseStatusCodesEnum } from '../../constants';\r\nimport { customErrors, ErrorHandler } from '../../errors';\r\nimport { authService } from '../../services';\r\nimport { tokenVerification } from '../../helpers';\r\n\r\nexport const checkAccessTokenMiddleware = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n\r\n  try {\r\n    const token = req.get(RequestHeadersEnum.AUTHORIZATION);\r\n\r\n    if (!token) {\r\n      return next(new ErrorHandler(ResponseStatusCodesEnum.BAD_REQUEST, customErrors.BAD_REQUEST_NO_TOKEN.message));\r\n    }\r\n\r\n    await tokenVerification(ActionEnum.USER_AUTH, token);\r\n\r\n    const userByToken = await authService.findUserByToken({ accessToken: token });\r\n\r\n    if (!userByToken) {\r\n      return next(new ErrorHandler(ResponseStatusCodesEnum.NOT_FOUND, customErrors.NOT_FOUND.message));\r\n    }\r\n\r\n    req.user = userByToken;\r\n\r\n    next();\r\n  } catch (e) {\r\n    next(e);\r\n  }\r\n};\r\n"]}