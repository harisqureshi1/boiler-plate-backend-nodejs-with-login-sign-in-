{"version":3,"file":"check-is-user-exist-by-email.middleware.js","sourceRoot":"","sources":["../../../src/middleware/user/check-is-user-exist-by-email.middleware.ts"],"names":[],"mappings":";;;AAEA,6CAA6C;AAC7C,yCAA0D;AAC1D,+CAA0D;AAC1D,uDAAuD;AAEhD,MAAM,iCAAiC,GAC5C,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAgC,EAAE;IACtF,MAAM,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAM,WAAW,GAAG,MAAM,sBAAW,CAAC,eAAe,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IAEjE,IAAI,CAAC,WAAW,EAAE;QAChB,OAAO,IAAI,CAAC,IAAI,qBAAY,CAAC,mCAAuB,CAAC,SAAS,EAAE,qBAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;KAClG;IAED,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC;IACvB,IAAI,EAAE,CAAC;AACT,CAAC,CAAC;AAXS,QAAA,iCAAiC,qCAW1C","sourcesContent":["import { NextFunction, Request, Response } from 'express';\r\n\r\nimport { userService } from '../../services';\r\nimport { customErrors, ErrorHandler } from '../../errors';\r\nimport { ResponseStatusCodesEnum } from '../../constants';\r\n// import { IRequestExtended } from '../../interfaces';\r\n\r\nexport const checkIsUserExistByEmailMiddleware =\r\n  async (req: Request, res: Response, next: NextFunction): Promise<void | NextFunction> => {\r\n    const { email } = req.body;\r\n    const userByEmail = await userService.findOneByParams({ email });\r\n\r\n    if (!userByEmail) {\r\n      return next(new ErrorHandler(ResponseStatusCodesEnum.NOT_FOUND, customErrors.NOT_FOUND.message));\r\n    }\r\n\r\n    req.user = userByEmail;\r\n    next();\r\n  };\r\n"]}