{"version":3,"file":"check-is-user-confirmed.middlevare.js","sourceRoot":"","sources":["../../../src/middleware/user/check-is-user-confirmed.middlevare.ts"],"names":[],"mappings":";;;AACA,yCAA0D;AAC1D,+CAA0E;AAGnE,MAAM,8BAA8B,GAAG,CAC5C,GAAY,EACZ,GAAa,EACb,IAAkB,EACG,EAAE;IACvB,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,IAAa,CAAC;IAErC,IAAI,MAAM,KAAK,0BAAc,CAAC,SAAS,EAAE;QACvC,OAAO,IAAI,CAAC,IAAI,qBAAY,CAC1B,mCAAuB,CAAC,SAAS,EACjC,qBAAY,CAAC,4BAA4B,CAAC,OAAO,EACjD,qBAAY,CAAC,4BAA4B,CAAC,IAAI,CAC/C,CAAC,CAAC;KACJ;IAED,IAAI,EAAE,CAAC;AACT,CAAC,CAAC;AAhBW,QAAA,8BAA8B,kCAgBzC","sourcesContent":["import { NextFunction, Request, Response } from 'express';\r\nimport { customErrors, ErrorHandler } from '../../errors';\r\nimport { ResponseStatusCodesEnum, UserStatusEnum } from '../../constants';\r\nimport { IUser } from '../../interfaces';\r\n\r\nexport const checkIsUserConfirmedMiddleware = (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): void | NextFunction => {\r\n  const { status } = req.user as IUser;\r\n\r\n  if (status !== UserStatusEnum.CONFIRMED) {\r\n    return next(new ErrorHandler(\r\n      ResponseStatusCodesEnum.FORBIDDEN,\r\n      customErrors.FORBIDDEN_USER_NOT_CONFIRMED.message,\r\n      customErrors.FORBIDDEN_USER_NOT_CONFIRMED.code\r\n    ));\r\n  }\r\n\r\n  next();\r\n};\r\n"]}